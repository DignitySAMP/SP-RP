new Float: CuffCoords[312][9] = {

{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // CJ - Does not work
{0.021000, 0.101998, -0.009999, -6.099919, -7.100001, 83.099945, 1.489999, 3.036000, 1.957998}, // 1
{0.021000, 0.049998, -0.009999, -6.099919, -7.100001, 83.099945, 0.989999, 3.036000, 1.957998}, // 2
{0.037000, 0.034998, -0.017999, -6.099919, -7.100001, 83.099945, 1.025999, 3.036000, 1.714998}, // 3
{0.045001, 0.115998, 0.008000, 3.100080, -6.900001, 71.299934, 1.556999, 2.976998, 1.732998}, // 4
{0.031001, 0.046998, 0.007000, 3.100080, -6.900001, 82.899940, 1.230999, 2.976998, 1.693999}, // 5
{0.031001, 0.039998, -0.003999, -6.199919, -6.900001, 82.899940, 0.986999, 2.976998, 1.383998}, // 6
{0.061001, 0.037999, -0.017999, -12.599921, 2.999991, 77.899871, 1.132000, 2.822998, 1.527998}, // 7
{0.045001, 0.037999, -0.017999, -12.599921, 2.999991, 77.899871, 1.132000, 2.822998, 1.527998}, // 8
{0.088, 0.017, -0.012, 0.900, -9.399, -96.299, 0.651, 1.607, 1.283}, // 9
{0.055, 0.045, -0.034, 0.900, -9.399, -96.299, 0.899, 1.607, 1.283}, // 10
{0.016, 0.024, -0.002, 0.900, -15.500, -96.299, 0.899, 1.607, 1.283}, // 11
{0.029, 0.024, -0.008, -10.199, -15.500, -96.299, 0.769, 1.607, 1.283}, // 12
{0.029, 0.024, -0.008, -10.199, -15.500, -96.299, 0.769, 1.607, 1.283}, // 13
{0.048000, 0.091998, -0.016999, -12.599921, 2.999991, 77.899871, 1.624000, 2.822998, 2.102999}, // 14
{0.034001, 0.059998, -0.033999, -12.599921, 2.999991, 77.899871, 1.624000, 2.822998, 2.102999}, // 15
{0.056000, 0.085998, -0.008999, -12.599921, 2.999991, 77.899871, 1.624000, 2.822998, 2.102999}, // 16
{0.061000, 0.046998, -0.019999, -12.599921, 2.999991, 77.899871, 1.381999, 2.785998, 1.922999}, // 17
{0.041000, 0.044998, -0.002999, -12.599921, 2.999991, 77.899871, 1.236999, 2.785998, 1.618000}, // 18
{0.041000, 0.071998, -0.007999, -12.599921, 2.999991, 77.899871, 1.479999, 2.785998, 1.993999}, // 19
{0.048000, 0.048998, -0.007999, 1.100076, 2.999991, 77.899871, 1.253999, 2.785998, 1.709000}, // 20
{0.041000, 0.053998, -0.010999, 2.600077, -12.600008, 77.899871, 1.163999, 2.785998, 1.643000}, // 21
{0.041000, 0.053998, -0.010999, 2.600077, -12.600008, 77.899871, 1.163999, 2.785998, 1.643000}, // 22
{0.029000, 0.124998, 0.008000, 1.300076, -9.400010, 79.599876, 2.001999, 2.785998, 2.481001}, // 23
{0.029000, 0.048998, -0.023999, 1.300076, -9.400010, 79.599876, 1.312999, 2.785998, 1.844001}, // 24
{0.046000, 0.042998, -0.027999, 1.300076, -9.400010, 79.599876, 1.312999, 2.785998, 1.844001}, // 25
{0.060000, 0.075998, -0.021999, 1.300076, -9.400010, 79.599876, 1.478999, 2.785998, 1.980001}, // 26
{0.033000, 0.049998, -0.013999, 1.300076, -9.400010, 79.599876, 1.138999, 2.785998, 1.805001}, // 27
{0.033000, 0.056998, -0.008999, 1.300076, -9.400010, 79.599876, 1.138999, 2.785998, 1.805001}, // 28
{0.033000, 0.044998, -0.032999, 1.300076, -9.400010, 79.599876, 1.138999, 2.785998, 1.805001}, // 29
{0.033000, 0.044998, -0.032999, 1.300076, -9.400010, 79.599876, 1.138999, 2.785998, 1.805001}, // 30
{0.029, 0.054, -0.028, -10.199, -15.500, -96.299, 1.129, 1.607, 1.389}, // 31
{-0.001999, 0.053998, -0.012999, -10.499922, -9.400010, 79.599876, 1.436999, 2.785998, 2.023001}, // 32
{0.053000, 0.053999, -0.005999, -11.899930, -9.299997, 84.299919, 1.129999, 3.036000, 1.453999}, // 33
{0.032000, 0.072999, -0.005999, -11.899930, -9.299997, 71.599922, 1.516999, 3.036000, 1.889999}, // 34
{-0.003999, 0.041999, -0.031000, -11.899930, -9.299997, 79.799903, 1.724999, 3.036000, 2.250999}, // 35
{0.007001, 0.050999, -0.031000, -11.899930, -9.299997, 79.799903, 1.528999, 3.036000, 2.096999}, // 36
{0.007001, 0.041999, -0.031000, -11.899930, -9.299997, 79.799903, 1.528999, 3.036000, 2.096999}, // 37
{0.029, 0.051, -0.028, -10.199, -15.500, -96.299, 0.948, 1.607, 1.389}, // 38
{0.029, 0.051, -0.028, -10.199, -15.500, -96.299, 0.948, 1.607, 1.389}, // 39
{0.029, 0.024, -0.006, -10.199, -15.500, -96.299, 0.948, 1.607, 1.389}, // 40
{0.029, 0.024, -0.006, -10.199, -15.500, -96.299, 0.948, 1.607, 1.389}, // 41
{0.031001, 0.042999, -0.025000, -6.599930, -18.699989, 79.799903, 1.487000, 3.036000, 1.865998}, // 42
{0.031001, 0.042999, -0.014000, -20.399934, -23.199989, 79.799903, 1.273000, 3.036000, 1.522998}, // 43
{0.031001, 0.065999, -0.014000, -20.399934, -23.199989, 79.799903, 1.273000, 3.036000, 1.522998}, // 44
{0.031001, 0.065999, -0.014000, -20.399934, -23.199989, 79.799903, 1.273000, 3.036000, 1.522998}, // 45
{0.007001, 0.043999, -0.014000, -20.399934, -23.199989, 79.799903, 1.273000, 3.036000, 1.522998}, // 46
{0.018001, 0.056999, -0.014000, -17.399932, -29.199985, 71.799911, 1.273000, 3.036000, 1.522998}, // 47
{0.018001, 0.044999, -0.014000, -17.399932, -29.199985, 71.799911, 1.273000, 3.036000, 1.522998}, // 48
{-0.012998, 0.027999, -0.038000, -25.099925, -37.999988, 72.599906, 1.384000, 3.036000, 1.650998}, // 49
{0.064001, 0.045999, -0.037000, -15.799923, -15.199990, 72.399909, 1.160000, 3.036000, 1.238998}, // 50
{0.064001, 0.070999, -0.012000, -15.799923, -15.199990, 72.399909, 1.348000, 3.036000, 1.684998}, // 51
{0.064001, 0.070999, -0.012000, -15.799923, -15.199990, 72.399909, 1.348000, 3.036000, 1.684998}, // 52
{0.029, 0.032, -0.032, -10.199, -15.500, -96.299, 0.948, 1.607, 1.389}, // 53
{0.052, 0.032, -0.049, -10.199, -15.500, -96.299, 0.948, 1.607, 1.389}, // 54
{0.015, 0.032, -0.006, -10.100, -19.200, -102.099, 0.905, 1.607, 1.389}, // 55
{0.042, 0.032, -0.006, -10.100, -19.200, -102.099, 0.905, 1.607, 1.389}, // 56
{0.034001, 0.019998, -0.016999, -14.899925, -16.999986, 77.999916, 0.983000, 3.036000, 1.392997}, // 57
{0.034001, 0.071998, -0.016999, -14.899925, -16.999986, 77.999916, 1.146001, 3.036000, 1.701997}, // 58
{0.034001, 0.044998, -0.016999, -14.899925, -16.999986, 77.999916, 1.146001, 3.036000, 1.701997}, // 59
{0.034001, 0.044998, -0.016999, -14.899925, -16.999986, 77.999916, 1.146001, 3.036000, 1.701997}, // 60
{0.037001, 0.044998, -0.038999, -14.899925, -16.999986, 77.999916, 1.146001, 3.036000, 1.701997}, // 61
{0.071001, 0.093998, 0.007000, -14.899925, -16.999986, 77.999916, 1.518001, 3.036000, 2.299997}, // 62
{0.026, 0.040, -0.006, -10.100, -19.200, -102.099, 0.981, 1.607, 1.389}, // 63
{0.026, 0.040, -0.006, -10.100, -19.200, -102.099, 0.981, 1.607, 1.389}, // 64
{0.019, 0.035, -0.006, -10.100, -19.200, -102.099, 0.792, 1.607, 1.389}, // 65
{0.058999, 0.024998, -0.024999, -14.899925, -13.399993, 77.999916, 1.064001, 3.036000, 1.246997}, // 66
{0.058999, 0.024998, -0.024999, -14.899925, -13.399993, 77.999916, 1.064001, 3.036000, 1.246997}, // 67
{0.058999, 0.040998, -0.024999, -14.899925, -13.399993, 77.999916, 1.064001, 3.036000, 1.246997}, // 68
{0.019, 0.026, -0.008, -10.100, -19.200, -102.099, 0.792, 1.607, 1.389}, // 69
{0.059999, 0.044998, -0.033999, -19.699926, -13.399993, 76.299911, 1.064001, 3.036000, 1.246997}, // 70
{0.059999, 0.044998, -0.033999, -19.699926, -13.399993, 76.299911, 1.064001, 3.036000, 1.246997}, // 71
{0.041999, 0.071998, -0.011999, -10.899921, -13.399993, 76.299911, 1.279001, 3.036000, 1.471997}, // 72
{0.041999, 0.071998, -0.011999, -10.899921, -13.399993, 76.299911, 1.279001, 3.036000, 1.471997}, // 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // 74
{0.019, 0.026, -0.008, -10.100, -19.200, -102.099, 0.792, 1.607, 1.389}, // 75
{0.038, 0.026, -0.008, -10.100, -19.200, -102.099, 0.792, 1.607, 1.389}, // 76
{0.030, 0.045, -0.017, -10.100, -19.200, -102.099, 0.891, 1.971, 1.700}, // 77
{0.021999, 0.046998, -0.024000, -14.399919, -32.399986, 75.899925, 1.592002, 3.036000, 2.203997}, // 78
{0.045999, 0.046998, -0.024000, -14.399919, -15.699983, 75.899925, 1.253002, 3.036000, 1.767997}, // 79
{-0.007000, 0.046998, -0.024000, -14.399919, -15.699983, 75.899925, 1.253002, 3.036000, 1.767997}, // 80
{-0.007000, 0.046998, -0.024000, -14.399919, -15.699983, 75.899925, 1.253002, 3.036000, 1.767997}, // 81
{0.042999, 0.044998, -0.009000, -14.399919, -15.699983, 75.899925, 1.253002, 3.036000, 1.767997}, // 82
{0.042999, 0.044998, -0.009000, -14.399919, -15.699983, 75.899925, 1.253002, 3.036000, 1.767997}, // 83
{0.042999, 0.044998, -0.009000, -14.399919, -15.699983, 75.899925, 1.253002, 3.036000, 1.767997}, // 84
{0.062, 0.002, -0.017, -10.100, -19.200, -102.099, 0.970, 1.971, 1.471}, // 85
{0.055999, 0.028998, -0.019000, -14.399919, -15.699983, 75.899925, 1.356001, 3.036000, 1.726998}, // 86
{0.001, 0.002, -0.017, -10.100, -19.200, -102.099, 0.721, 1.971, 1.471}, // 87
{0.025, 0.039, -0.052, -10.100, -19.200, -102.099, 0.920, 1.971, 1.471}, // 88
{0.050, 0.039, -0.041, -10.100, -19.200, -102.099, 0.920, 1.971, 1.471}, // 89
{0.028, 0.039, -0.007, -8.700, -8.600, -102.099, 0.920, 1.971, 1.471}, // 90
{0.026, 0.026, -0.007, -8.700, -8.600, -102.099, 0.822, 1.971, 1.471}, // 91
{0.026, 0.040, -0.007, -8.700, -8.600, -102.099, 0.822, 1.971, 1.471}, // 92
{0.026, 0.025, -0.007, -8.700, -8.600, -102.099, 0.822, 1.971, 1.471}, // 93
{0.020999, 0.057998, -0.019000, -14.399919, -23.499982, 75.899925, 1.356001, 3.036000, 1.726998}, // 94
{0.020999, 0.066998, -0.019000, -14.399919, -23.499982, 75.899925, 1.356001, 3.036000, 1.726998}, // 95
{0.020999, 0.073998, -0.019000, -14.399919, -23.499982, 75.899925, 1.726001, 3.036000, 2.126998}, // 96
{0.049999, 0.054998, -0.019000, -14.399919, -23.499982, 75.899925, 1.726001, 3.036000, 2.126998}, // 97
{0.049999, 0.047998, -0.019000, -14.399919, -23.499982, 75.899925, 1.397001, 3.036000, 1.587998}, // 98
{0.049999, 0.075998, -0.019000, -14.399919, -23.499982, 75.899925, 1.397001, 3.036000, 1.587998}, // 99
{0.021999, 0.057998, -0.019000, -14.399919, -23.499982, 75.899925, 1.397001, 3.036000, 1.587998}, // 100
{0.054999, 0.057998, -0.047000, -14.399919, -23.499982, 75.899925, 1.397001, 3.036000, 1.587998}, // 101
{0.031999, 0.057998, -0.014000, -14.399919, -23.499982, 75.899925, 1.397001, 3.036000, 1.587998}, // 102
{0.079999, 0.147998, -0.014000, -14.399919, -23.499982, 75.899925, 2.485005, 3.036000, 2.238998}, // 103
{0.045999, 0.043998, -0.006000, -14.399919, -23.499982, 75.899925, 1.124004, 3.036000, 1.722997}, // 104
{0.081999, 0.163998, -0.026000, -9.099919, -6.399981, 75.899925, 2.497004, 3.036000, 3.194998}, // 105
{0.081999, 0.059998, -0.004000, -9.099919, -6.399981, 75.899925, 1.028003, 3.036000, 1.371998}, // 106
{0.057999, 0.040998, -0.004000, -9.099919, -6.399981, 75.899925, 1.028003, 3.036000, 1.371998}, // 107
{0.057999, 0.090998, -0.004000, -9.099919, -6.399981, 75.899925, 1.350003, 3.036000, 1.619998}, // 108
{0.043999, 0.046998, -0.004000, -9.099919, -6.399981, 75.899925, 1.004003, 3.036000, 1.254998}, // 109
{0.043999, 0.046998, -0.004000, -9.099919, -6.399981, 75.899925, 1.004003, 3.036000, 1.254998}, // 110
{0.056999, 0.046998, -0.038000, -9.099919, -6.399981, 75.899925, 1.004003, 3.036000, 1.254998}, // 111
{0.056999, 0.065998, -0.038000, -9.099919, -6.399981, 75.899925, 1.004003, 3.036000, 1.254998}, // 112
{0.067999, 0.091998, -0.008000, -9.099919, -6.399981, 75.899925, 1.249004, 3.036000, 1.553998}, // 113
{0.033999, 0.057998, -0.008000, -9.099919, -6.399981, 75.899925, 1.249004, 3.036000, 1.553998}, // 114
{0.064999, 0.057998, -0.009000, -9.099919, -6.399981, 75.899925, 1.249004, 3.036000, 1.686998}, // 115
{0.028999, 0.051998, -0.009000, -9.099919, -6.399981, 75.899925, 1.249004, 3.036000, 1.686998}, // 116
{0.052999, 0.025998, 0.004999, -9.099919, -6.399981, 75.899925, 0.841004, 3.036000, 1.327998}, // 117
{0.052999, 0.025998, 0.004999, -9.099919, -6.399981, 75.899925, 0.841004, 3.036000, 1.327998}, // 118
{0.056999, 0.025998, -0.017000, -9.099919, -6.399981, 75.899925, 1.001004, 3.036000, 1.789998}, // 119
{0.071999, 0.090998, -0.017000, -9.099919, -6.399981, 75.899925, 1.623004, 3.036000, 1.789998}, // 120
{0.028999, 0.084998, -0.017000, -9.099919, -6.399981, 75.899925, 1.452004, 3.036000, 1.789998}, // 121
{0.028999, 0.084998, -0.017000, -9.099919, -6.399981, 75.899925, 1.452004, 3.036000, 1.789998}, // 122
{0.081999, 0.054998, -0.017000, -9.099919, -6.399981, 75.899925, 1.452004, 3.036000, 1.789998}, // 123
{0.018999, 0.054998, -0.017000, -9.099919, -6.399981, 75.899925, 1.452004, 3.036000, 1.789998}, // 124
{0.039999, 0.041998, -0.019000, -9.099919, -6.399981, 75.899925, 1.173004, 3.036000, 1.568998}, // 125
{0.039999, 0.041998, -0.019000, -9.099919, -6.399981, 75.899925, 1.173004, 3.036000, 1.568998}, // 126
{0.056999, 0.114998, -0.010000, -9.099919, -8.199983, 75.899925, 1.358004, 3.036000, 2.048998}, // 127
{0.056999, 0.060998, -0.010000, -9.099919, -8.199983, 75.899925, 1.358004, 3.036000, 2.048998}, // 128
{0.043, 0.025, -0.007, -8.700, -8.600, -102.099, 0.822, 1.971, 1.471}, // 129
{0.025, 0.030, -0.057, -8.700, -8.600, -102.099, 0.987, 1.971, 1.471}, // 130
{0.025, 0.030, -0.008, -8.700, -8.600, -102.099, 0.987, 1.971, 1.471}, // 131
{0.038999, 0.049999, -0.003000, -9.099919, -8.199983, 75.899925, 1.059004, 3.036000, 1.114998}, // 132
{0.041999, 0.079999, -0.017000, -9.099919, -8.199983, 75.899925, 1.285004, 3.036000, 1.503998}, // 133
{0.041999, 0.040999, -0.017000, -9.099919, -8.199983, 75.899925, 0.880004, 3.036000, 1.045998}, // 134
{0.041999, 0.040999, -0.027000, -9.099919, -8.199983, 75.899925, 0.880004, 3.036000, 1.045998}, // 135
{0.059999, 0.040999, -0.003000, -9.099919, -8.199983, 75.899925, 1.104004, 3.036000, 1.376998}, // 136
{0.001999, 0.040999, -0.003000, -17.499917, -26.699991, 75.899925, 1.104004, 3.036000, 1.376998}, // 137
{0.025, 0.037, -0.008, -8.700, -8.600, -102.099, 0.987, 1.971, 1.471}, // 138
{0.025, 0.037, -0.008, -8.700, -8.600, -102.099, 0.987, 1.971, 1.471}, // 139
{0.025, 0.037, -0.008, -8.700, -8.600, -102.099, 0.987, 1.971, 1.471}, // 140
{0.065, 0.037, -0.008, -8.700, -8.600, -102.099, 0.702, 1.971, 1.269}, // 141
{0.041999, 0.052998, -0.012000, -14.899912, -26.699991, 75.899925, 1.206004, 3.036000, 1.726998}, // 142
{0.041999, 0.052998, -0.012000, -14.899912, -26.699991, 75.899925, 1.206004, 3.036000, 1.726998}, // 143
{0.041999, 0.052998, -0.012000, -14.899912, -26.699991, 75.899925, 1.206004, 3.036000, 1.726998}, // 144
{0.027, 0.037, -0.008, -8.700, -8.600, -102.099, 1.029, 1.971, 1.409}, // 145
{0.022999, 0.075998, -0.012000, -14.899912, -26.699991, 75.899925, 1.365004, 3.036000, 1.862998}, // 146
{0.050999, 0.050998, -0.032000, -14.899912, -11.900002, 75.899925, 1.118004, 3.036999, 1.449998}, // 147
{0.045, 0.028, -0.008, -8.700, -8.600, -102.099, 0.758, 1.971, 1.409}, // 148
{0.050999, 0.062998, -0.029000, -14.899912, -11.900002, 75.899925, 1.118004, 3.036999, 1.449998}, // 149
{0.060, 0.027, -0.008, -8.700, -8.600, -102.099, 0.758, 1.971, 1.409}, // 150
{0.042, 0.049, -0.040, -8.700, -8.600, -102.099, 0.918, 1.971, 1.654}, // 151
{0.015, 0.013, -0.035, -8.700, -8.600, -102.099, 0.918, 1.971, 1.414}, // 152
{0.061999, 0.040999, -0.030000, -14.899912, -11.900002, 75.899925, 0.972004, 3.036999, 0.992997}, // 153
{0.061999, 0.040999, -0.030000, -14.899912, -11.900002, 75.899925, 0.972004, 3.036999, 0.992997}, // 154
{0.061999, 0.032999, -0.014000, -14.899912, -11.900002, 75.899925, 0.972004, 3.036999, 0.992997}, // 155
{0.027999, 0.093999, -0.014000, -14.899912, -11.900002, 75.899925, 1.390004, 3.036999, 1.494998}, // 156
{0.034, 0.013, -0.013, -8.700, -8.600, -102.099, 0.918, 1.971, 1.414}, // 157
{0.045999, 0.074999, -0.014000, -14.899912, -11.900002, 75.899925, 1.412004, 3.036999, 2.106997}, // 158
{0.018999, 0.055999, -0.014000, -14.899912, -11.900002, 75.899925, 1.095004, 3.036999, 1.621996}, // 159
{0.030999, 0.043999, -0.014000, -14.899912, -11.900002, 75.899925, 0.898004, 3.036999, 1.350997}, // 160
{0.030999, 0.043999, -0.014000, -14.899912, -11.900002, 75.899925, 1.039004, 3.036999, 1.494997}, // 161
{0.030999, 0.043999, -0.014000, -14.899912, -11.900002, 75.899925, 1.039004, 3.036999, 1.494997}, // 162
{0.050999, 0.043999, -0.034000, -14.899912, -11.900002, 75.899925, 1.039004, 3.036999, 1.494997}, // 163
{0.050999, 0.043999, -0.034000, -14.899912, -11.900002, 75.899925, 1.039004, 3.036999, 1.494997}, // 164
{0.029999, 0.028999, -0.034000, -14.899912, -11.900002, 75.899925, 1.039004, 3.036999, 1.494997}, // 165
{0.029999, 0.028999, -0.034000, -14.899912, -11.900002, 75.899925, 1.039004, 3.036999, 1.494997}, // 166
{0.029999, 0.042999, -0.018000, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 167
{0.029999, 0.035999, -0.018000, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 168
{0.034, 0.013, -0.006, -8.700, -8.600, -102.099, 0.845, 1.971, 1.414}, // 169
{0.029999, 0.035999, -0.018000, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 170
{0.029999, 0.035999, -0.018000, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 171
{0.034, 0.013, -0.006, -8.700, -8.600, -102.099, 0.845, 1.971, 1.414}, // 172
{0.029999, 0.035999, -0.018000, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 173
{0.029999, 0.035999, -0.018000, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 174
{0.029999, 0.035999, -0.018000, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 175
{0.039999, 0.051999, 0.000999, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 176
{0.039999, 0.051999, 0.000999, -14.899912, -11.900002, 75.899925, 1.179004, 3.036999, 1.674997}, // 177
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 178
{0.028999, 0.049999, 0.000999, -14.899912, -11.900002, 75.899925, 1.296003, 3.036999, 1.674997}, // 179
{0.028999, 0.049999, 0.000999, -14.899912, -11.900002, 75.899925, 1.296003, 3.036999, 1.674997}, // 180
{0.047999, 0.091999, 0.000999, -14.899912, -11.900002, 75.899925, 1.541003, 3.036999, 2.083997}, // 181
{0.047999, 0.049999, -0.024000, -14.899912, -11.900002, 75.899925, 0.903003, 3.036999, 1.464997}, // 182
{0.047999, 0.049999, -0.024000, -14.899912, -11.900002, 75.899925, 0.903003, 3.036999, 1.464997}, // 183
{0.072999, 0.092999, 0.005999, -14.899912, -11.900002, 75.899925, 1.687003, 3.036999, 2.431997}, // 184
{0.072999, 0.045999, -0.012000, -14.899912, -11.900002, 75.899925, 0.800003, 3.036999, 1.623997}, // 185
{0.072999, 0.045999, -0.012000, -14.899912, -11.900002, 75.899925, 0.800003, 3.036999, 1.623997}, // 186
{0.072999, 0.045999, -0.012000, -14.899912, -11.900002, 75.899925, 0.947003, 3.036999, 1.623997}, // 187
{0.072999, 0.089999, -0.000999, -5.599913, -11.900002, 75.899925, 1.380003, 3.036999, 1.623997}, // 188
{0.050999, 0.045999, -0.010999, -5.599913, -11.900002, 75.899925, 0.871003, 3.036999, 1.430997}, // 189
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 190
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 191
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 192
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 193
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 194
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 195
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 196
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 197
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 198
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 199
{0.028999, 0.069998, -0.010999, -5.599913, -11.900002, 75.899925, 1.294003, 3.036999, 1.724997}, // 200
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 0.967, 1.971, 1.414}, // 201
{0.044999, 0.083998, 0.000000, -5.599913, -11.900002, 75.899925, 1.265003, 3.036999, 1.724997}, // 202
{0.093999, 0.049999, 0.000000, -5.599913, -11.900002, 75.899925, 0.981003, 3.036999, 1.439996}, // 203
{0.093999, 0.049999, 0.000000, -5.599913, -11.900002, 75.899925, 0.981003, 3.036999, 1.439996}, // 204
{0.034, 0.039, -0.006, -8.700, -16.000, -102.099, 1.063, 1.971, 1.705}, // 205
{0.036000, 0.083998, -0.011999, -8.699912, -11.900002, 80.799919, 1.349002, 3.036999, 1.759997}, // 206
{0.022, 0.024, -0.029, -8.700, -16.000, -102.099, 0.953, 1.971, 1.291}, // 207
{0.036000, 0.034000, -0.011999, -8.699912, -11.900002, 80.799919, 0.668002, 3.036999, 1.020996}, // 208
{0.036000, 0.050000, 0.001000, -8.699912, -11.900002, 80.799919, 0.881002, 3.036999, 1.081997}, // 209
{0.014000, 0.037000, -0.018999, -8.699912, -25.800001, 75.799903, 0.881002, 3.036999, 1.081997}, // 210
{0.022, 0.031, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 211
{0.067000, 0.043000, -0.014000, -8.699912, -25.800001, 75.799903, 0.982002, 3.036999, 1.250997}, // 212
{0.067000, 0.043000, -0.044000, -8.699912, -25.800001, 75.799903, 0.982002, 3.036999, 1.250997}, // 213
{0.022, 0.031, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 214
{0.022, 0.031, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 215
{0.022, 0.031, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 216
{0.042000, 0.086000, -0.010000, -8.699912, -25.800001, 75.799903, 1.403002, 3.036999, 1.802997}, // 217
{0.022, 0.031, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 218
{0.038, 0.031, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 219
{0.041000, 0.048000, -0.017000, -8.699912, -25.800001, 75.799903, 1.031002, 3.036999, 1.452997}, // 220
{0.041000, 0.084000, -0.017000, -8.699912, -25.800001, 75.799903, 1.342002, 3.036999, 1.627997}, // 221
{0.041000, 0.084000, -0.017000, -8.699912, -25.800001, 75.799903, 1.342002, 3.036999, 1.627997}, // 222
{0.041000, 0.040000, -0.017000, -8.699912, -25.800001, 75.799903, 0.833002, 3.036999, 1.150997}, // 223
{0.029, 0.028, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 224
{0.029, 0.028, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 225
{0.029, 0.028, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 226
{0.041000, 0.040000, -0.017000, -8.699912, -25.800001, 75.799903, 0.833002, 3.036999, 1.150997}, // 227
{0.041000, 0.040000, -0.017000, -8.699912, -25.800001, 75.799903, 0.833002, 3.036999, 1.150997}, // 228
{0.041000, 0.056000, -0.017000, -8.699912, -25.800001, 75.799903, 1.032002, 3.036999, 1.247997}, // 229
{0.041000, 0.039000, -0.017000, -8.699912, -25.800001, 75.799903, 1.032002, 3.036999, 1.247997}, // 230
{0.029, 0.039, -0.025, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 231
{0.029, 0.039, -0.025, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 232
{0.029, 0.023, -0.011, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 233
{0.041000, 0.060000, -0.006000, -8.699912, -25.800001, 75.799903, 1.137002, 3.036999, 2.040997}, // 234
{0.041000, 0.060000, -0.006000, -8.699912, -25.800001, 75.799903, 1.137002, 3.036999, 2.040997}, // 235
{0.041000, 0.060000, -0.006000, -8.699912, -25.800001, 75.799903, 1.137002, 3.036999, 2.040997}, // 236
{0.029, 0.023, -0.024, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 237
{0.029, 0.023, -0.002, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 238
{0.053000, 0.048000, -0.018000, -8.699912, -25.800001, 83.799911, 1.137002, 3.036999, 2.040997}, // 239
{0.007000, 0.048000, -0.018000, -8.699912, -25.800001, 83.799911, 1.137002, 3.036999, 2.040997}, // 240
{0.023000, 0.051000, -0.018000, -8.699912, -25.800001, 83.799911, 1.266002, 3.036999, 2.292997}, // 241
{0.023000, 0.051000, -0.018000, -8.699912, -25.800001, 83.799911, 1.266002, 3.036999, 2.292997}, // 242
{0.029, 0.023, -0.021, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 243
{0.021, -0.003, -0.019, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 244
{0.052, 0.046, -0.019, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 245
{0.018, -0.008, -0.019, -8.700, -16.000, -102.099, 0.852, 1.971, 1.291}, // 246
{0.019000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 1.648002, 3.036999, 2.544996}, // 247
{0.035000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 1.648002, 3.036999, 2.544996}, // 248
{0.035000, 0.047000, -0.040000, -8.699912, -25.800001, 83.799911, 1.648002, 3.036999, 2.544996}, // 249
{0.035000, 0.102000, 0.009999, -8.699912, -25.800001, 83.799911, 1.648002, 3.036999, 2.544996}, // 250
{0.018, 0.046, -0.019, -12.100, -15.800, -103.199, 0.852, 1.971, 1.291}, // 251
{0.081000, 0.090000, -0.026000, -8.699912, -25.800001, 83.799911, 1.373001, 3.036999, 2.438996}, // 252
{0.023000, 0.060000, -0.026000, -8.699912, -25.800001, 83.799911, 1.373001, 3.036999, 2.438996}, // 253
{0.023000, 0.060000, -0.026000, -8.699912, -25.800001, 83.799911, 1.373001, 3.036999, 2.438996}, // 254
{0.030000, 0.053000, -0.026000, -8.699912, -25.800001, 83.799911, 1.138001, 3.036999, 1.889996}, // 255
{0.027, 0.028, -0.011, -12.100, -15.800, -103.199, 0.852, 1.971, 1.291}, // 256
{0.027, 0.028, -0.011, -12.100, -15.800, -103.199, 0.852, 1.971, 1.291}, // 257
{0.065000, 0.091000, -0.026000, -8.699912, -25.800001, 83.799911, 1.418002, 3.036999, 2.230996}, // 258
{0.065000, 0.091000, -0.026000, -8.699912, -25.800001, 83.799911, 1.418002, 3.036999, 2.230996}, // 259
{0.065000, 0.035000, -0.026000, -8.699912, -25.800001, 83.799911, 0.999001, 3.036999, 1.600996}, // 260
{0.048000, 0.042000, -0.013000, -8.699912, -25.800001, 83.799911, 0.999001, 3.036999, 1.600996}, // 261
{0.061000, 0.042000, -0.016000, -8.699912, -25.800001, 83.799911, 0.999001, 3.036999, 1.600996}, // 262
{0.061000, 0.042000, -0.016000, -8.699912, -25.800001, 83.799911, 0.999001, 3.036999, 1.600996}, // 263
{0.040000, 0.042000, -0.016000, -8.699912, -25.800001, 83.799911, 0.983002, 3.036999, 1.767996}, // 264
{0.040000, 0.042000, -0.016000, -8.699912, -25.800001, 83.799911, 0.983002, 3.036999, 1.767996}, // 265
{0.040000, 0.042000, -0.016000, -8.699912, -25.800001, 83.799911, 0.983002, 3.036999, 1.767996}, // 266
{0.017000, 0.004000, -0.034000, -8.699912, -25.800001, 83.799911, 0.581001, 3.036999, 1.216996}, // 267
{0.017000, 0.042000, -0.026000, -8.699912, -25.800001, 83.799911, 0.860001, 3.036999, 1.685996}, // 268
{0.048000, 0.066000, -0.018000, -8.699912, -25.800001, 83.799911, 1.020001, 3.036999, 1.947996}, // 269
{0.048000, 0.052000, -0.018000, -8.699912, -25.800001, 83.799911, 1.020001, 3.036999, 1.947996}, // 270
{0.048000, 0.052000, -0.018000, -8.699912, -25.800001, 83.799911, 1.020001, 3.036999, 1.947996}, // 271
{0.048000, 0.087000, -0.018000, -8.699912, -25.800001, 83.799911, 1.449001, 3.036999, 2.544995}, // 272
{0.007000, 0.036000, -0.018000, -8.699912, -25.800001, 83.799911, 0.770001, 3.036999, 1.757996}, // 273
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 274
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 275
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 276
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 277
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 278
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 279
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 280
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 281
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 282
{0.026000, 0.047000, -0.018000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 283
{0.042000, 0.047000, -0.017000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 284
{0.069000, 0.021000, -0.029000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 285
{0.069000, 0.045000, -0.029000, -8.699912, -25.800001, 83.799911, 0.905001, 3.036999, 1.879996}, // 286
{0.065000, 0.045000, -0.021000, -8.699912, -25.800001, 83.799911, 1.182001, 3.036999, 2.423996}, // 287
{0.065000, 0.045000, -0.021000, -8.699912, -25.800001, 83.799911, 0.961001, 3.036999, 1.897996}, // 288
{0.065000, 0.045000, -0.021000, -8.699912, -25.800001, 83.799911, 0.857001, 3.036999, 1.744996}, // 289
{0.065000, 0.045000, -0.021000, -8.699912, -25.800001, 83.799911, 0.857001, 3.036999, 1.744996}, // 290
{0.030000, 0.038000, -0.021000, -8.699912, -25.800001, 83.799911, 0.680001, 3.036999, 1.562996}, // 291
{0.030000, 0.073000, -0.021000, -8.699912, -25.800001, 83.799911, 1.147001, 3.036999, 1.958996}, // 292
{0.050000, 0.031000, -0.025000, -8.699912, -25.800001, 83.799911, 0.841001, 3.036999, 1.370996}, // 293
{0.050000, 0.031000, -0.025000, -8.699912, -25.800001, 83.799911, 0.841001, 3.036999, 1.370996}, // 294
{-0.003999, 0.024000, -0.025000, -8.699912, -25.800001, 83.799911, 0.841001, 3.036999, 1.370996}, // 295
{-0.003999, 0.024000, -0.025000, -8.699912, -25.800001, 83.799911, 0.841001, 3.036999, 1.370996}, // 296
{0.019000, 0.050000, -0.039000, -8.699912, -25.800001, 83.799911, 0.841001, 3.036999, 1.370996}, // 297
{0.009000, 0.011000, -0.017000, -8.699912, -25.800001, 83.799911, 0.841001, 3.036999, 1.370996}, // 298
{0.009000, 0.057000, -0.017000, -8.699912, -25.800001, 83.799911, 0.841001, 3.036999, 1.370996}, // 299
{0.030000, 0.048000, -0.017000, -8.699912, -25.800001, 83.799911, 1.027001, 3.036999, 1.621996}, // 300
{0.030000, 0.048000, -0.017000, -8.699912, -25.800001, 83.799911, 1.027001, 3.036999, 1.621996}, // 301
{0.030000, 0.048000, -0.017000, -8.699912, -25.800001, 83.799911, 1.027001, 3.036999, 1.621996}, // 302
{0.030000, 0.048000, -0.017000, -8.699912, -25.800001, 83.799911, 1.027001, 3.036999, 1.621996}, // 303
{0.030000, 0.048000, -0.017000, -8.699912, -25.800001, 83.799911, 1.027001, 3.036999, 1.621996}, // 304
{0.030000, 0.048000, -0.017000, -8.699912, -25.800001, 83.799911, 1.027001, 3.036999, 1.621996}, // 305
{0.018, 0.019, -0.002, -22.900, -10.700, -112.099, 0.843, 1.971, 1.291}, // 306
{0.018, 0.019, -0.002, -22.900, -10.700, -112.099, 0.843, 1.971, 1.291}, // 307
{0.018, 0.019, -0.002, -22.900, -10.700, -112.099, 0.843, 1.971, 1.291}, // 308
{0.018, 0.019, -0.002, -22.900, -10.700, -112.099, 0.843, 1.971, 1.291}, // 309
{0.030000, 0.048000, -0.025000, -8.699912, -25.800001, 83.799911, 1.027001, 3.036999, 1.621996}, // 310
{0.030000, 0.048000, -0.025000, -8.699912, -25.800001, 83.799911, 1.027001, 3.036999, 1.621996} // 311
};

#include <YSI_Coding\y_hooks>

static enum E_CUFFED_PLAYER_DATA
{
	E_CUFFED_PLAYER_VEHICLE,
	E_CUFFED_PLAYER_SEAT,
	E_CUFFED_PLAYER_LEAVING_VEH,
	E_CUFFED_PLAYER_LEAVING_SEAT,
	E_CUFFED_PLAYER_ENTERING_VEH,
}

static CuffedPlayer[MAX_PLAYERS][E_CUFFED_PLAYER_DATA];

static bool:CanPlayerUseCuffs(playerid)
{
	return IsPlayerInPoliceFaction(playerid, true) || IsPlayerGovCop(playerid, true);
}

hook OnPlayerUpdate(playerid)
{
	if (GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE && GetPVarInt(playerid, "CUFFED") == 1)
	{
		// Automatically re-cuffs cuffed players that somehow get out of them
		if (!IsPlayerInAnyVehicle(playerid)) // Note: only need to do this if they're not in a car (it gets called all the time in a car otherwise)
		{
			SOLS_SetPlayerCuffed(playerid, true, false);
		}
	}

	if (CuffedPlayer[playerid][E_CUFFED_PLAYER_ENTERING_VEH])
	{
		// Prevents a cuffed player from entering a vehicle.
		ClearAnimations(playerid, 1);
		CuffedPlayer[playerid][E_CUFFED_PLAYER_ENTERING_VEH] = 0;
	}
	else if (CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_VEH] && CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_SEAT] != -1)
	{
		// Puts a cuffed player back into a vehicle (prevents exit)
		JT_PutPlayerInVehicle(playerid, CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_VEH], CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_SEAT]);
		CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_VEH] = 0;
		CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_SEAT] = -1;
	}

	return 1;
}

// Prevents cuffed players from entering cars except LSPD/LSFD backseat
hook OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if (GetPVarInt(playerid, "CUFFED") == 1)
	{
		// Reset this first.
		CuffedPlayer[playerid][E_CUFFED_PLAYER_ENTERING_VEH] = 0;

		if (ispassenger)
		{
			/*
			new factiontype = GetVehicleFactionType(vehicleid);
			if (factiontype == FACTION_TYPE_POLICE || factiontype == FACTION_TYPE_EMS || factiontype == FACTION_TYPE_DEA)
			{
				// Allow cuffed players to enter backseat of government faction vehicles if door is open
				new seat = GetVehicleClosestSeatToPlayer(vehicleid, playerid);
				if ((seat == 2 || seat == 3) && IsVehicleDoorOpen(vehicleid, seat))
				{
					return 1;
				}
			}
			*/

			// Allow for any passenger seat so long as the door is open
			new seat = GetVehicleClosestSeatToPlayer(vehicleid, playerid);
			if ((seat == 1 || seat == 2 || seat == 3) && IsVehicleDoorOpen(vehicleid, seat))
			{
				return 1;
			}
		}

		// Otherwise, make sure they go nowhere near being in a car (also done in OnPlayerUpdate)
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		CuffedPlayer[playerid][E_CUFFED_PLAYER_ENTERING_VEH] = vehicleid;
	}

    return 1;
}

// Prevents cuffed players from leaving cars.
hook OnPlayerExitVehicle(playerid, vehicleid)
{
	// Reset these first
	CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_VEH] = 0;
	CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_SEAT] = -1;

    if (GetPVarInt(playerid, "CUFFED") == 1)
	{
		new seat = GetPlayerVehicleSeat(playerid);
		if (IsVehicleDoorOpen(vehicleid, seat))
		{
			// Allow them to exit since the door is open.
			return 1;
		}

		// Otherwise put them back in (done in OnPlayerUpdate)
		CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_VEH] = vehicleid;
		CuffedPlayer[playerid][E_CUFFED_PLAYER_LEAVING_SEAT] = seat;
	}

    return 1;
}

CMD:tieup(playerid, params[])
{
	new giveplayerid;
	if (sscanf(params, "k<player>", giveplayerid)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "Usage: /tieup [playerid/name]");
	if (!IsPlayerConnected(giveplayerid)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "This player isn't connected.");

	if (!PlayerVar[playerid][E_PLAYER_ADMIN_DUTY] || GetPlayerAdminLevel(playerid) < ADMIN_LVL_JUNIOR)
	{
		//if (playerid == giveplayerid) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You cannot tie-up yourself.");
		if (!PlayerVar [ playerid ] [ E_PLAYER_ROPES ]) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You don't have any rope (buy some at a hardware store)");
	}

	if (!IsPlayerNearPlayer(playerid, giveplayerid, 3.0)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You are not near this person.");

	if (GetPVarInt(giveplayerid, "CUFFED") == 2)
	{
		// Re-tie them
		SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
		SOLS_SetPlayerCuffed(giveplayerid, true, false, true);
		return true;
	}

	if (GetPVarInt(giveplayerid, "CUFFREQUEST") != 0) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You have already requested to tie up this player, wait for them to accept.");	

	SetPVarInt(giveplayerid, "CUFFREQUEST", 2);
	SetPVarInt(giveplayerid, "CUFFREQUESTBY", playerid);

	if (playerid == giveplayerid || (PlayerVar[playerid][E_PLAYER_ADMIN_DUTY] && GetPlayerAdminLevel(playerid) >= ADMIN_LVL_JUNIOR))
	{
		// Allow people to tie themselves without accepting
		Police_OnPlayerCuffResponse(giveplayerid, true);
		return true;
	}

	new string[144];
	format(string, sizeof(string), "[Info] {777777}You have sent a {1F85DE}tie request{777777} to (%d) %s.", giveplayerid, ReturnSettingsName(giveplayerid, playerid));
	SendClientMessage(playerid, 0xAAFF00FF, string);
	format(string, sizeof(string), "[Info] {777777}%s wants to tie you up, type {1F85DE}\"/accept tie\"{777777} to accept.", ReturnSettingsName(playerid, giveplayerid));
	SendClientMessage(giveplayerid, 0xAAFF00FF, string);

	defer CuffRequestExpire(giveplayerid, playerid);
	return true;
}

CMD:cuff(playerid, params[])
{
	new giveplayerid;
	if (sscanf(params, "k<player>", giveplayerid)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "Usage: /cuff [playerid/name]");
	if (!IsPlayerConnected(giveplayerid)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "This player isn't connected.");

	if (!PlayerVar[playerid][E_PLAYER_ADMIN_DUTY] || GetPlayerAdminLevel(playerid) < ADMIN_LVL_JUNIOR)
	{
		if (!CanPlayerUseCuffs(playerid)) 
			return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You are not an on duty in a faction that can do this.");

		//if (playerid == giveplayerid) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You cannot cuff yourself.");
	}

	if (!IsPlayerNearPlayer(playerid, giveplayerid, 3.0)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You are not near this person.");

	if (GetPVarInt(giveplayerid, "CUFFED") == 1)
	{
		// Re-cuff them
		SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
		SOLS_SetPlayerCuffed(giveplayerid, true, false);
		return true;
	}

	if (GetPVarInt(giveplayerid, "CUFFREQUEST") != 0) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You have already requested to cuff this player, wait for them to accept.");	

	SetPVarInt(giveplayerid, "CUFFREQUEST", 1);
	SetPVarInt(giveplayerid, "CUFFREQUESTBY", playerid);

	if (playerid == giveplayerid || IsPlayerIncapacitated(giveplayerid, false) || (PlayerVar[playerid][E_PLAYER_ADMIN_DUTY] && GetPlayerAdminLevel(playerid) >= ADMIN_LVL_JUNIOR))
	{
		// Allow injured, tasered or beanbagged players to be cuffed without accepting
		Police_OnPlayerCuffResponse(giveplayerid, true);
		return true;
	}
	
	new string[144];
	format(string, sizeof(string), "[Info] {777777}You have sent a {1F85DE}cuff request{777777} to (%d) %s.", giveplayerid, ReturnSettingsName(giveplayerid, playerid));
	SendClientMessage(playerid, 0xAAFF00FF, string);
	format(string, sizeof(string), "[Info] {777777}%s wants to handcuff you, type {1F85DE}\"/accept cuffs\"{777777} to accept.", ReturnSettingsName(playerid, giveplayerid));
	SendClientMessage(giveplayerid, 0xAAFF00FF, string);

	defer CuffRequestExpire(giveplayerid, playerid);
	return true;
}

SOLS_SetPlayerCuffed(playerid, bool:cuffed, bool:notify = false, bool:tied=false)
{
	if (cuffed)
	{
	    new skin = GetPlayerSkin(playerid);

		if (tied)
		{
			SetPlayerAttachedObject(playerid, E_ATTACH_INDEX_SYSTEM, -25276, 6, 0.035000,0.027000,0.002000,41.499965,61.500015,40.700000,0.900,1.000,0.900);
		}
		else
		{
			SetPlayerAttachedObject(playerid, E_ATTACH_INDEX_SYSTEM, 19418, 6, CuffCoords[skin][0], CuffCoords[skin][1], CuffCoords[skin][2], CuffCoords[skin][3], CuffCoords[skin][4], CuffCoords[skin][5], CuffCoords[skin][6], CuffCoords[skin][7], CuffCoords[skin][8]);
		}

	   	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		SetPVarInt(playerid, "CUFFED", 1);
		if (tied) SetPVarInt(playerid, "CUFFED", 2);
	}
	else
	{
		RemovePlayerAttachedObject(playerid, E_ATTACH_INDEX_SYSTEM);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPVarInt(playerid, "CUFFED", 0);
	}

	if (tied && notify) ShowPlayerSubtitle(playerid, sprintf("You've been %s~w~.", cuffed ? "~r~tied up" : "~g~untied"), 3000);
	else if (notify) ShowPlayerSubtitle(playerid, sprintf("You've been %s~w~.", cuffed ? "~r~cuffed" : "~g~uncuffed"), 3000);
}

Police_OnPlayerCuffResponse(playerid, bool:force=false) 
{
	new tied = GetPVarInt(playerid, "CUFFREQUEST") == 2;
	new cuffed = GetPVarInt(playerid, "CUFFREQUEST") == 1;
	new byplayerid = GetPVarInt(playerid, "CUFFREQUESTBY");

	if (tied || cuffed || force)
	{
		if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_NONE)
		{
			ClearAnimations(playerid);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		}

		if (IsPlayerConnected(byplayerid) && IsPlayerNearPlayer(playerid, byplayerid, 10.0))
		{
			if (tied)
			{
				SOLS_SetPlayerCuffed(playerid, true, true, true);
				AddLogEntry(playerid, LOG_TYPE_SCRIPT, sprintf("Was tied up by %s (%d)", ReturnMixedName(byplayerid), byplayerid));
				AddLogEntry(byplayerid, LOG_TYPE_SCRIPT, sprintf("Tied up %s (%d)", ReturnMixedName(playerid), playerid));
			} 
			else
			{
				SOLS_SetPlayerCuffed(playerid, true, true, false);
				AddLogEntry(playerid, LOG_TYPE_SCRIPT, sprintf("Was cuffed by %s (%d)", ReturnMixedName(byplayerid), byplayerid));
				AddLogEntry(byplayerid, LOG_TYPE_SCRIPT, sprintf("Cuffed %s (%d)", ReturnMixedName(playerid), playerid));
			}
		}

	    SetPVarInt(playerid, "CUFFREQUEST", 0);
	}

	return true;		
}

CMD:uncuff(playerid, params[])
{
	new giveplayerid;
	if (sscanf(params, "k<player>", giveplayerid)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "Usage: /uncuff [playerid/name]");
	if (!IsPlayerConnected(giveplayerid)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "This player isn't connected.");

	if (!PlayerVar[playerid][E_PLAYER_ADMIN_DUTY] || GetPlayerAdminLevel(playerid) < ADMIN_LVL_JUNIOR)
	{
		if (playerid != giveplayerid && IsPlayerIncapacitated(playerid, false)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You can't do this right now.");
		
		if (!CanPlayerUseCuffs(playerid)) 
			return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You are not an on duty in a faction that can do this.");

		if (playerid == giveplayerid)
		{
			new byplayerid = GetPVarInt(playerid, "CUFFREQUESTBY");
			if (byplayerid != playerid) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You cannot uncuff yourself.");
		}
		
		if (GetPVarInt(giveplayerid, "CUFFED") != 1) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "This player isn't cuffed.");
	}

	if (!IsPlayerNearPlayer(playerid, giveplayerid, 3.0)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You are not near this person.");
	SOLS_SetPlayerCuffed(giveplayerid, false, true);

	return true;
}

CMD:untie(playerid, params[])
{
	new giveplayerid;
	if (sscanf(params, "k<player>", giveplayerid)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "Usage: /untie [playerid/name]");
	if (!IsPlayerConnected(giveplayerid)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "This player isn't connected.");
	
	if (!PlayerVar[playerid][E_PLAYER_ADMIN_DUTY] || GetPlayerAdminLevel(playerid) < ADMIN_LVL_JUNIOR)
	{
		if (IsPlayerIncapacitated(playerid, false)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You can't do this right now.");
		if (playerid == giveplayerid)
		{
			new byplayerid = GetPVarInt(playerid, "CUFFREQUESTBY");
			if (byplayerid != playerid) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You cannot untie yourself.");
		} 
		if (GetPVarInt(giveplayerid, "CUFFED") != 2) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "This player isn't tied.");
		if (GetPVarInt(playerid, "CUFFED") == 2) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You should worry about getting yourself free first.");
	}

	if (!IsPlayerNearPlayer(playerid, giveplayerid, 3.0)) return SendServerMessage(playerid, COLOR_ERROR, "Error", "DEDEDE", "You are not near this person.");
	SOLS_SetPlayerCuffed(giveplayerid, false, true);

	return true;
}

timer CuffRequestExpire[30000](playerid, targetid) 
{
	#pragma unused targetid

	// playerid = player who has request
	// targetid = player who sent request
	
	SetPVarInt(playerid, "CUFFREQUEST", 0);
	return 1;
}

/*
CMD:cuff(playerid, cmdtext[]) 
{
	new factionid = Character [ playerid ] [ E_CHARACTER_FACTIONID ] ;

	if ( ! factionid ) {

		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "You're not in a faction!");
	}

	new faction_enum_id = Faction_GetEnumID(factionid ); 

	if ( faction_enum_id == INVALID_FACTION_ID ) {

		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "Error fetching faction enumerator ID! Contact a DEV.");
	}

	if ( Faction [ faction_enum_id ] [ E_FACTION_TYPE ] != 0 ) {

		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "You're not in a police faction.");
	}

	new target_player, ok_to_cuff;
	if( sscanf(cmdtext, "k<player>", target_player) )  {

		return SendServerMessage ( playerid, COLOR_ERROR, "Syntax", "A3A3A3", "/cuff [targetid]");
	}
	if( !IsPlayerNearPlayer(playerid, target_player, 2.0)) {

		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "You're not near your target.");
	}

	if(GetPlayerSkin(target_player) == 0 ) {
		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "Can't cuff people in a CJ skin!");
	}
	if( GetPlayerSpecialAction( target_player ) == SPECIAL_ACTION_DUCK || GetPlayerSpecialAction( target_player ) == SPECIAL_ACTION_HANDSUP )
	{
		ok_to_cuff = 1;
	}
	if( !ok_to_cuff )
	{
		if( GetPlayerAnimationIndex( target_player ) )
		{
			new animlib[32];
			new animname[32];
			GetAnimationName(GetPlayerAnimationIndex(target_player),animlib,32,animname,32);
			if( !strcmp( animname, "KD_right", true, strlen(animname)) )
			{
				ok_to_cuff = 1;
			}
			else if( !strcmp( animname, "FLOOR_hit_f", true, strlen(animname)) )
			{
				ok_to_cuff = 1;
			}
		}
		if( PlayerVar [ target_player ] [ E_PLAYER_IS_BEANBAGGED ] || PlayerVar [ target_player ] [ E_PLAYER_IS_TAZED ] || PlayerVar [ target_player ] [ E_PLAYER_IS_TACKLED ] ) {
			ok_to_cuff = 1;
		}
	}
	if( ok_to_cuff )
	{
		new cuff_skin_id = GetPlayerSkin(target_player);
		SetPlayerAttachedObject(target_player,ATTACH_SLOT_MISC,19418,6,cuff_pos[ cuff_skin_id ][ _cflx ], cuff_pos[ cuff_skin_id ][ _cfly ], cuff_pos[ cuff_skin_id ][ _cflz ], cuff_pos[ cuff_skin_id ][ _cflx_rot ], cuff_pos[ cuff_skin_id ][ _cfly_rot ],
		cuff_pos[ cuff_skin_id ][ _cflz_rot ], cuff_pos[ cuff_skin_id ][ _cflx_sca ], cuff_pos[ cuff_skin_id ][ _cfly_sca ], cuff_pos[ cuff_skin_id ][ _cflz_sca ]);
		SetPlayerSpecialAction(target_player, SPECIAL_ACTION_CUFFED);

		return true ;
	}

	SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "Your target has to either crouch, lay down or be tased/beanbagged/tackled before you can cuff them.");
	return 1;
}
CMD:uncuff(playerid, cmdtext[]) 
{
	new factionid = Character [ playerid ] [ E_CHARACTER_FACTIONID ] ;

	if ( ! factionid ) {

		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "You're not in a faction!");
	}

	new faction_enum_id = Faction_GetEnumID(factionid ); 

	if ( faction_enum_id == INVALID_FACTION_ID ) {

		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "Error fetching faction enumerator ID! Contact a DEV.");
	}

	if ( Faction [ faction_enum_id ] [ E_FACTION_TYPE ] != 0 ) {

		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "You're not in a police faction.");
	}

	new target_player;
	if( sscanf(cmdtext, "k<player>", target_player) )  {

		return SendServerMessage ( playerid, COLOR_ERROR, "Syntax", "A3A3A3", "/uncuff [targetid]");
	}
	if( !IsPlayerNearPlayer(playerid, target_player, 2.0) ) {
		
		return SendServerMessage ( playerid, COLOR_ERROR, "Error", "A3A3A3", "You're not near your target.");
	}

	if( GetPlayerSpecialAction(target_player) == SPECIAL_ACTION_CUFFED ) {

		RemovePlayerAttachedObject( target_player, ATTACH_SLOT_MISC );
		SetPlayerSpecialAction(target_player,0);
	}
	else
	{
		SendClientMessage(playerid, COLOR_RED, "This person is not cuffed (if are but they're crouching tell them to stand up straight).");
	}
	return 1;
}
*/

